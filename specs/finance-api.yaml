openapi: 3.1.0
info:
  name: Finance
  title: Triathlon Business Finance API
  description: API for managing finances, reports, and payroll for a triathlon business.
  version: 1.3.6
  contact:
    name: API Support
    url: https://wildtrico.com/support
    email: support@wildtrico.com
  x-konnect:
    slug: finance-v1
    attributes:
      domain: [ "Business" ]
      use_case: [ "Commerce" ]
      audience: [ "Admin" ]
      data_type: [ "Transactions" ]
      business_function: [ "Finance" ]
      workflow_stage: [ "Any" ]
      integration_type: [ "Payment","Commerce" ]
      access_level: [ "Internal" ]
      complexity_level: [ "Composite" ]
      industry_focus: [ "Retail","Finance" ]
servers:
  - url: https://api.example.com/finance
    description: Main server
tags:
  - name: Finance
    description: Operations related to financial management
  - name: Reports
    description: Operations related to generating financial reports
  - name: Payroll
    description: Operations related to managing payroll
paths:
  /invoices:
    get:
      summary: List all invoices with pagination
      description: Returns a list of all invoices with pagination.
      operationId: listInvoices
      tags:
        - Finance
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of items to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
    post:
      summary: Create a new invoice
      description: Creates a new invoice.
      operationId: createInvoice
      tags:
        - Finance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInput'
      responses:
        '201':
          description: Invoice created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid input
  /invoices/{invoice_id}:
    get:
      summary: Get an invoice by ID
      description: Returns a single invoice by its ID.
      operationId: getInvoiceById
      tags:
        - Finance
      parameters:
        - name: invoice_id
          in: path
          required: true
          description: ID of the invoice to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Invoice not found
    put:
      summary: Update an invoice by ID
      description: Updates an existing invoice by its ID.
      operationId: updateInvoice
      tags:
        - Finance
      parameters:
        - name: invoice_id
          in: path
          required: true
          description: ID of the invoice to update
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInput'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid input
        '404':
          description: Invoice not found
    delete:
      summary: Delete an invoice by ID
      description: Deletes an invoice by its ID.
      operationId: deleteInvoice
      tags:
        - Finance
      parameters:
        - name: invoice_id
          in: path
          required: true
          description: ID of the invoice to delete
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Invoice deleted
        '404':
          description: Invoice not found
  /reports/monthly:
    get:
      summary: Generate monthly financial report
      description: Generates a monthly financial report.
      operationId: generateMonthlyReport
      tags:
        - Reports
      parameters:
        - name: month
          in: query
          required: true
          description: The month for which to generate the report (YYYY-MM)
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialReport'
        '400':
          description: Invalid input
  /payroll:
    get:
      summary: List all payroll entries with pagination
      description: Returns a list of all payroll entries with pagination.
      operationId: listPayrollEntries
      tags:
        - Payroll
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of items to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollEntryList'
    post:
      summary: Create a new payroll entry
      description: Creates a new payroll entry.
      operationId: createPayrollEntry
      tags:
        - Payroll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollEntryInput'
      responses:
        '201':
          description: Payroll entry created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollEntry'
        '400':
          description: Invalid input
components:
  schemas:
    Invoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the invoice
        invoice_number:
          type: string
          description: Invoice number
        client_name:
          type: string
          description: Name of the client
        invoice_date:
          type: string
          format: date
          description: Date of the invoice
        total_amount:
          type: number
          format: float
          description: Total amount of the invoice
        status:
          type: string
          enum: [draft, sent, paid, overdue]
          description: Status of the invoice
      example:
        id: 123e4567-e89b-12d3-a456-426614174000
        invoice_number: INV-2024-001
        client_name: John Doe
        invoice_date: 2024-01-20
        total_amount: 1500.00
        status: sent
    InvoiceInput:
      type: object
      properties:
        client_name:
          type: string
          description: Name of the client
        invoice_date:
          type: string
          format: date
          description: Date of the invoice
        total_amount:
          type: number
          format: float
          description: Total amount of the invoice
        status:
          type: string
          enum: [draft, sent, paid, overdue]
          description: Status of the invoice
      example:
        client_name: John Doe
        invoice_date: 2024-01-20
        total_amount: 1500.00
        status: sent
    InvoiceList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
        meta:
          type: object
          properties:
            page:
              type: object
              properties:
                offset:
                  type: integer
                  description: The number of items to skip before starting to collect the result set
                  example: 0
                limit:
                  type: integer
                  description: The numbers of items to return
                  example: 20
                total:
                  type: integer
                  description: The total number of items available
                  example: 100
                estimated_total:
                  type: boolean
                  description: If the total results count is an estimate
                  example: true
    FinancialReport:
      type: object
      properties:
        month:
          type: string
          pattern: '^\d{4}-\d{2}$'
          description: The month for which the report is generated
        revenue:
          type: number
          format: float
          description: Total revenue for the month
        expenses:
          type: number
          format: float
          description: Total expenses for the month
        net_profit:
          type: number
          format: float
          description: Net profit for the month
      example:
        month: 2024-01
        revenue: 10000.00
        expenses: 5000.00
        net_profit: 5000.00
    PayrollEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the payroll entry
        employee_name:
          type: string
          description: Name of the employee
        payment_date:
          type: string
          format: date
          description: Date of the payment
        amount:
          type: number
          format: float
          description: Amount paid to the employee
      example:
        id: 456a7890-abcd-12ef-3456-654321fedcba
        employee_name: Jane Smith
        payment_date: 2024-01-15
        amount: 3000.00
    PayrollEntryInput:
      type: object
      properties:
        employee_name:
          type: string
          description: Name of the employee
        payment_date:
          type: string
          format: date
          description: Date of the payment
        amount:
          type: number
          format: float
          description: Amount paid to the employee
      example:
        employee_name: Jane Smith
        payment_date: 2024-01-15
        amount: 3000.00
    PayrollEntryList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEntry'
        meta:
          type: object
          properties:
            page:
              type: object
              properties:
                offset:
                  type: integer
                  description: The number of items to skip before starting to collect the result set
                  example: 0
                limit:
                  type: integer
                  description: The numbers of items to return
                  example: 20
                total:
                  type: integer
                  description: The total number of items available
                  example: 100
                estimated_total:
                  type: boolean
                  description: If the total results count is an estimate
                  example: true
